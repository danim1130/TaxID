# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ConfidenceValue(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, value: str=None, confidence: float=None):  # noqa: E501
        """ConfidenceValue - a model defined in Swagger

        :param value: The value of this ConfidenceValue.  # noqa: E501
        :type value: str
        :param confidence: The confidence of this ConfidenceValue.  # noqa: E501
        :type confidence: float
        """
        self.swagger_types = {
            'value': str,
            'confidence': float
        }

        self.attribute_map = {
            'value': 'value',
            'confidence': 'confidence'
        }

        self._value = value
        self._confidence = confidence

    @classmethod
    def from_dict(cls, dikt) -> 'ConfidenceValue':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ConfidenceValue of this ConfidenceValue.  # noqa: E501
        :rtype: ConfidenceValue
        """
        return util.deserialize_model(dikt, cls)

    @property
    def value(self) -> str:
        """Gets the value of this ConfidenceValue.


        :return: The value of this ConfidenceValue.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value: str):
        """Sets the value of this ConfidenceValue.


        :param value: The value of this ConfidenceValue.
        :type value: str
        """

        self._value = value

    @property
    def confidence(self) -> float:
        """Gets the confidence of this ConfidenceValue.

        Number between 0-100. Higher number means higher confidence.  # noqa: E501

        :return: The confidence of this ConfidenceValue.
        :rtype: float
        """
        return self._confidence

    @confidence.setter
    def confidence(self, confidence: float):
        """Sets the confidence of this ConfidenceValue.

        Number between 0-100. Higher number means higher confidence.  # noqa: E501

        :param confidence: The confidence of this ConfidenceValue.
        :type confidence: float
        """

        self._confidence = confidence
